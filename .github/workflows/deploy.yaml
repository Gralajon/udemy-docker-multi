name: Deploy Multi
on:
  push:
    branches:
      - master
   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        # create and boot a builder
        name: setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: docker login action
        # env:
        #   DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
        #   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
#      - 
#        name: docker login
#        run: docker login -u ${{ vars.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: docker build client for test
        run: >
          docker build
          -t ${{ vars.DOCKER_USERNAME }}/multi-client-test
          -f ./client/Dockerfile.dev ./client
      -
        name: docker run client test
        run: >
          docker run -e CI=true
          ${{ vars.DOCKER_USERNAME }}/multi-client-test npm test

      # -
      #   name: Client build and push
      #   uses: docker/build-push-action
      #   with: 
      #     context: ./client


      - name: Build and push all for deploy
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/multi-client ./client
          docker build -t ${{ vars.DOCKER_USERNAME }}/multi-nginx ./nginx
          docker build -t ${{ vars.DOCKER_USERNAME }}/multi-server ./server
          docker build -t ${{ vars.DOCKER_USERNAME }}/multi-worker ./worker
          docker push ${{ vars.DOCKER_USERNAME }}/multi-client
          docker push ${{ vars.DOCKER_USERNAME }}/multi-nginx
          docker push ${{ vars.DOCKER_USERNAME }}/multi-server
          docker push ${{ vars.DOCKER_USERNAME }}/multi-worker

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: "${{ secrets.AWS_SECRET_KEY }}"
          application_name: multi-docker-2
          environment_name: Multi-docker-2-env
          existing_bucket_name: "elasticbeanstalk-us-west-1-565295202784"
          region: us-west-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
